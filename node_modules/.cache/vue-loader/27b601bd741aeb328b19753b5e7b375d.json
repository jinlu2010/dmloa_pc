{"remainingRequest":"D:\\HBuilderProjects\\DML_OA\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HBuilderProjects\\DML_OA\\src\\pages\\index\\staff\\List.vue?vue&type=style&index=1&lang=css&","dependencies":[{"path":"D:\\HBuilderProjects\\DML_OA\\src\\pages\\index\\staff\\List.vue","mtime":1616492034123},{"path":"D:\\HBuilderProjects\\DML_OA\\node_modules\\css-loader\\index.js","mtime":1615258078741},{"path":"D:\\HBuilderProjects\\DML_OA\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1615258095783},{"path":"D:\\HBuilderProjects\\DML_OA\\node_modules\\postcss-loader\\src\\index.js","mtime":1615258097227},{"path":"D:\\HBuilderProjects\\DML_OA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615258085839},{"path":"D:\\HBuilderProjects\\DML_OA\\node_modules\\vue-loader\\lib\\index.js","mtime":1615258095774}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.el-tree--highlight-current .el-tree-node.is-current > .el-tree-node__content {\n\n  color: #20d4d9;\n\n  background-color: transparent;\n\n}\n\n.el-tree-node.is-expanded.is-focusable {\n\n  color: #444;\n\n}\n\n",{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgOA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA","file":"List.vue","sourceRoot":"src/pages/index/staff","sourcesContent":["<template>\n\n  <div>\n\n    <div style=\"padding-left: 20px; border-bottom: 1px solid #e6e6e6\">\n\n      <el-tooltip\n\n        class=\"item\"\n\n        effect=\"dark\"\n\n        content=\"新建文件夹\"\n\n        placement=\"top-start\"\n\n      >\n\n        <i class=\"wbs-icon-Addfolder icon contract-icon\" @click=\"createDic\"></i>\n\n      </el-tooltip>\n\n      <el-tooltip\n\n        class=\"item\"\n\n        effect=\"dark\"\n\n        content=\"修改名称\"\n\n        placement=\"top-start\"\n\n      >\n\n        <i class=\"el-icon-edit-outline\" @click=\"editDic\"></i>\n\n      </el-tooltip>\n\n    </div>\n\n    <div style=\"overflow-x: auto\">\n\n      <el-tree\n\n        class=\"treeitems\"\n\n        :props=\"defaultProps\"  \n\n        :data=\"treeData\"\n\n        node-key=\"id\"\n\n        highlight-current\n\n        :default-expanded-keys=\"idArr\"  //默认展开\n\n        @node-click=\"handleNodeClick\"\n\n        :load=\"loadNode\" //懒加载\n\n        :lazy=\"lazy\"\n\n        ref=\"tree\"\n\n      >\n\n        <span\n\n          class=\"custom-tree-node\"\n\n          slot-scope=\"{ node, data }\"\n\n          :lazy=\"data.hasChildren === 0 ? false : true\"\n\n        >\n\n          <span>\n\n            <i\n\n              :class=\"data.isLeaf == 0 ? 'wbs-icon-folder' : ''\"\n\n              style=\"color: rgb(209, 150, 80)\"\n\n            ></i\n\n            >{{ node.label }}\n\n          </span>\n\n        </span>\n\n      </el-tree>\n\n    </div>\n\n    <el-dialog\n\n      :visible.sync=\"creatDicSync\"\n\n      :title=\"dicTitle\"\n\n      width=\"640px\"\n\n      :append-to-body=\"true\"\n\n      class=\"dialog-wrapper\"\n\n      center\n\n    >\n\n      <el-form\n\n        :model=\"userForm\"\n\n        :rules=\"rules\"\n\n        ref=\"userForm\"\n\n        label-width=\"142px\"\n\n        class=\"demo-ruleForm\"\n\n      >\n\n        <el-form-item label=\"文件夹名称\" prop=\"name\" style=\"width: 546px\">\n\n          <el-input\n\n            v-model=\"userForm.name\"\n\n            placeholder=\"请输入文件夹名称\"\n\n            maxlength=\"12\"\n\n          ></el-input>\n\n        </el-form-item>\n\n      </el-form>\n\n      <div class=\"dialog-footer\">\n\n        <el-button @click=\"modelClose\">{{ this.$t(\"text.cancel\") }}</el-button>\n\n        <el-button\n\n          type=\"primary\"\n\n          @click=\"submit('userForm')\"\n\n          :loading=\"loading\"\n\n          >{{ this.$t(\"text.sure\") }}</el-button\n\n        >\n\n      </div>\n\n    </el-dialog>\n\n  </div>\n\n</template>\n\n<style scoped>\n\ni {\n\n  cursor: pointer;\n\n}\n\n.el-tree {\n\n  background: #f7f7f7;\n\n  overflow: auto;\n\n  height: calc(100% - 28px);\n\n  min-width: 150px;\n\n}\n\n[class*=\"el-col-\"] {\n\n  height: 100%;\n\n}\n\n.el-row {\n\n  height: calc(100% - 56px);\n\n}\n\n.el-icon-edit-outline {\n\n  font-size: 18px;\n\n  position: absolute;\n\n  top: 4px;\n\n  margin-left: 8px;\n\n}\n\n.dialog-footer {\n\n  text-align: right;\n\n  margin-right: -5px;\n\n  padding-bottom: 20px;\n\n}\n\n</style>\n\n<style>\n\n.el-tree--highlight-current .el-tree-node.is-current > .el-tree-node__content {\n\n  color: #20d4d9;\n\n  background-color: transparent;\n\n}\n\n.el-tree-node.is-expanded.is-focusable {\n\n  color: #444;\n\n}\n\n</style>\n\n<script>\n\nimport {\n\n  getTreeList,\n\n  getChildTreeList,\n\n  addTreeBranch,\n\n  updateTreeBranch,\n\n} from \"@/util/api\";\n\nexport default {\n\n  name: \"groupTree\",\n\n  data() {\n\n    return {\n\n      loading: false,\n\n      creatDicSync: false,\n\n      currentNode: {},\n\n      dicTitle: \"\",\n\n      idArr: [],\n\n      userForm: {\n\n        name: \"\",\n\n        explain: \"\",\n\n        publicKey: \"\",\n\n      },\n\n      lazy: true,\n\n      treeData: [],\n\n      defaultProps: {\n\n        children: \"children\",\n\n        label: \"label\",\n\n        icon: \"icon\",\n\n        isLeaf: \"isLeaf\", //叶子节点\n\n      },\n\n      disabled: false,\n\n    };\n\n  },\n\n  computed: {\n\n    rules() {\n\n      let data = {\n\n        name: [\n\n          {\n\n            required: true,\n\n            message: \"请输入文件夹名称\",\n\n            trigger: \"blur\",\n\n          },\n\n          {\n\n            min: 1,\n\n            max: 12,\n\n            message: \"文件夹名称过长\",\n\n            trigger: \"blur\",\n\n          },\n\n        ],\n\n      };\n\n      return data;\n\n    },\n\n  },\n\n  mounted() {\n\n    this.getTree();\n\n  },\n\n  watch: {\n\n    treeData: {//默认展开一级\n\n      handler() {\n\n        if (this.treeData.length > 0) {\n\n          this.treeData.forEach((item) => {\n\n            this.idArr.push(item.id);\n\n          });\n\n        }\n\n      },\n\n      deep: true,\n\n    },\n\n  },\n\n  methods: {\n\n    eRefresh(){//局部刷新\n\n      let node = this.$refs.tree.getNode(this.currentNode.id); \n\n      node.loaded = false;\n\n      node.expand();\n\n    },\n\n    formatT(data) {\n\n      for (var i = 0; i < data.length; i++) {\n\n        if (data[i].isLeaf == 1) {\n\n          data[i].isLeaf = true;\n\n        }\n\n      }\n\n    },\n\n    getTree() {\n\n      getTreeList()\n\n        .then((res) => {\n\n          if (res.data.code === 0) {\n\n            this.treeData = [];\n\n            this.treeData.push(res.data.data);\n\n            this.$refs.tree.setCheckedKeys([this.currentNode.id]);\n\n          } else {\n\n          }\n\n        })\n\n        .catch((err) => {\n\n          this.$message({\n\n            message: this.$t(\"text.systemError\"),\n\n            type: \"error\",\n\n            duration: 2000,\n\n          });\n\n        });\n\n    },\n\n    loadNode(node, resolve) {\n\n      this.formatT(this.treeData);\n\n      if (node.level === 0) {\n\n        return resolve(this.treeData);\n\n      }\n\n      if (node.level > 0) this.getChildrenNode(node, resolve);\n\n      // if (node.level === 1) return resolve([]);\n\n    },\n\n    // 二级节点\n\n    getChildrenNode(node, resolve) {\n\n      let categoryId = node.data.id;\n\n      getChildTreeList(categoryId)\n\n        .then((res) => {\n\n          if (res.data.code === 0) {\n\n            this.formatT(res.data.data);\n\n            resolve(res.data.data);\n\n            this.$refs.tree.setCheckedKeys([this.currentNode.id]);\n\n          } else {\n\n            this.$message({\n\n              message: this.$t(\"text.systemError\"),\n\n              type: \"error\",\n\n              duration: 2000,\n\n            });\n\n          }\n\n        })\n\n        .catch((err) => {\n\n          this.$message({\n\n            message: this.$t(\"text.systemError\"),\n\n            type: \"error\",\n\n            duration: 2000,\n\n          });\n\n        });\n\n    },\n\n    createDic() {\n\n      this.creatDicSync = true;\n\n      this.dicTitle = \"新建文件夹\";\n\n    },\n\n    editDic() {\n\n      this.creatDicSync = true;\n\n      this.dicTitle = \"修改文件夹\";\n\n      this.userForm.name = this.currentNode.label;\n\n    },\n\n    handleNodeClick(data, node, obj) {\n\n      this.currentNode = this.$refs.tree.getCurrentNode();\n\n      localStorage.setItem(\"treeId\",this.currentNode.id);\n\n      this.$emit(\"nodeClick\", data);\n\n    },\n\n    modelClose: function () {\n\n      this.userForm = Object.assign({\n\n        name: \"\",\n\n      });\n\n      this.loading = false;\n\n      this.creatDicSync = false;\n\n      this.$refs[\"userForm\"].resetFields();\n\n    },\n\n    submit: function (formName) {\n\n      this.$refs[formName].validate((valid) => {\n\n        if (valid) {\n\n          var data = {},\n\n            id = \"\";\n\n          if (this.currentNode.id) {\n\n            id = this.currentNode.id;\n\n          }\n\n          this.loading = true;\n\n          data.label = this.userForm.name;\n\n          data.parentId = id;\n\n          if (this.dicTitle == \"新建文件夹\") {\n\n            this.addBranch(data);\n\n          } else {\n\n            var data = {},\n\n              id = \"\";\n\n            if (this.currentNode.id) {\n\n              id = this.currentNode.id;\n\n            }\n\n            this.loading = true;\n\n            data.label = this.userForm.name;\n\n            data.id = id;\n\n            this.updateBranch(data);\n\n          }\n\n        } else {\n\n          return false;\n\n        }\n\n      });\n\n    },\n\n    addBranch: function (data) {\n\n      addTreeBranch(data)\n\n        .then((res) => {\n\n            this.loading = false;\n\n          if (res.data.code === 0) {\n\n            this.creatDicSync = false;\n\n            this.eRefresh();\n\n            this.$message({\n\n              message: \"新建成功\",\n\n              type: \"success\",\n\n              duration: 2000,\n\n            });\n\n          } else {\n\n            this.$message({\n\n              message: res.data.message,\n\n              type: \"error\",\n\n              duration: 2000,\n\n            });\n\n          }\n\n        })\n\n        .catch((err) => {\n\n          this.loading = false;\n\n          this.$message({\n\n            message: this.$t(\"text.systemError\"),\n\n            type: \"error\",\n\n            duration: 2000,\n\n          });\n\n        });\n\n    },\n\n    updateBranch: function (data) {\n\n      updateTreeBranch(data)\n\n        .then((res) => {\n\n            this.loading = false;\n\n          if (res.data.code === 0) {\n\n            this.creatDicSync = false;\n\n            this.eRefresh();\n\n            this.$message({\n\n              message: \"更新成功\",\n\n              type: \"success\",\n\n              duration: 2000,\n\n            });\n\n          } else {\n\n            this.$message({\n\n              message: res.data.message,\n\n              type: \"error\",\n\n              duration: 2000,\n\n            });\n\n          }\n\n        })\n\n        .catch((err) => {\n\n          this.loading = false;\n\n          this.$message({\n\n            message: this.$t(\"text.systemError\"),\n\n            type: \"error\",\n\n            duration: 2000,\n\n          });\n\n        });\n\n    },\n\n  },\n\n};\n\n</script>\n"]}]}