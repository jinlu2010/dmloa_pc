{"remainingRequest":"D:\\HBuilderProjects\\DML_OA\\node_modules\\babel-loader\\lib\\index.js!D:\\HBuilderProjects\\DML_OA\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\HBuilderProjects\\DML_OA\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HBuilderProjects\\DML_OA\\src\\pages\\index\\staff\\tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HBuilderProjects\\DML_OA\\src\\pages\\index\\staff\\tree.vue","mtime":1616492600669},{"path":"D:\\HBuilderProjects\\DML_OA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615258085839},{"path":"D:\\HBuilderProjects\\DML_OA\\node_modules\\babel-loader\\lib\\index.js","mtime":1615258097485},{"path":"D:\\HBuilderProjects\\DML_OA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615258085839},{"path":"D:\\HBuilderProjects\\DML_OA\\node_modules\\vue-loader\\lib\\index.js","mtime":1615258095774}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.map\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TreeRender from \"./tree_render\";\nimport api from '@/resource/api';\nexport default {\n  name: 'tree',\n  data: function data() {\n    return {\n      maxexpandId: api.maxexpandId,\n      //新增节点开始id\n      non_maxexpandId: api.maxexpandId,\n      //新增节点开始id(不更改)\n      isLoadingTree: false,\n      //是否加载节点树\n      setTree: api.treelist,\n      //节点树数据\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      defaultExpandKeys: [] //默认展开节点列表\n\n    };\n  },\n  mounted: function mounted() {\n    console.log(api);\n    this.initExpand();\n  },\n  methods: {\n    initExpand: function initExpand() {\n      var _this = this;\n\n      this.setTree.map(function (a) {\n        _this.defaultExpandKeys.push(a.id);\n      });\n      this.isLoadingTree = true;\n    },\n    handleNodeClick: function handleNodeClick(d, n, s) {\n      //点击节点\n      // console.log(d,n)\n      d.isEdit = false; //放弃编辑状态\n    },\n    renderContent: function renderContent(h, _ref) {\n      var node = _ref.node,\n          data = _ref.data,\n          store = _ref.store;\n      //加载节点\n      var that = this;\n      return h(TreeRender, {\n        props: {\n          DATA: data,\n          NODE: node,\n          STORE: store,\n          maxexpandId: that.non_maxexpandId\n        },\n        on: {\n          nodeAdd: function nodeAdd(s, d, n) {\n            return that.handleAdd(s, d, n);\n          },\n          nodeEdit: function nodeEdit(s, d, n) {\n            return that.handleEdit(s, d, n);\n          },\n          nodeDel: function nodeDel(s, d, n) {\n            return that.handleDelete(s, d, n);\n          }\n        }\n      });\n    },\n    handleAddTop: function handleAddTop() {\n      this.setTree.push({\n        id: ++this.maxexpandId,\n        name: '新增节点',\n        pid: '',\n        isEdit: false,\n        children: []\n      });\n    },\n    handleAdd: function handleAdd(s, d, n) {\n      //增加节点\n      console.log(s, d, n);\n\n      if (n.level >= 3) {\n        this.$message.error(\"最多只支持五级！\");\n        return false;\n      } //添加数据\n\n\n      d.children.push({\n        id: ++this.maxexpandId,\n        name: '新增节点',\n        pid: d.id,\n        isEdit: false,\n        children: []\n      }); //展开节点\n\n      if (!n.expanded) {\n        n.expanded = true;\n      }\n    },\n    handleEdit: function handleEdit(s, d, n) {\n      //编辑节点\n      console.log(s, d, n);\n    },\n    handleDelete: function handleDelete(s, d, n) {\n      var _this2 = this;\n\n      //删除节点\n      console.log(s, d, n);\n      var that = this; //有子级不删除\n\n      if (d.children && d.children.length !== 0) {\n        this.$message.error(\"此节点有子级，不可删除！\");\n        return false;\n      } else {\n        //新增节点直接删除，否则要询问是否删除\n        var delNode = function delNode() {\n          var list = n.parent.data.children || n.parent.data,\n              //节点同级数据\n          _index = 99999; //要删除的index\n\n          /*if(!n.parent.data.children){//删除顶级节点，无children\n            list = n.parent.data\n          }*/\n\n          list.map(function (c, i) {\n            if (d.id == c.id) {\n              _index = i;\n            }\n          });\n          var k = list.splice(_index, 1); //console.log(_index,k)\n\n          _this2.$message.success(\"删除成功！\");\n        };\n\n        var isDel = function isDel() {\n          that.$confirm(\"是否删除此节点？\", \"提示\", {\n            confirmButtonText: \"确认\",\n            cancelButtonText: \"取消\",\n            type: \"warning\"\n          }).then(function () {\n            delNode();\n          }).catch(function () {\n            return false;\n          });\n        }; //判断是否新增\n\n\n        d.id > this.non_maxexpandId ? delNode() : isDel();\n      }\n    }\n  }\n};",{"version":3,"sources":["tree.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"expand\">\n    <div>\n        <el-button @click=\"handleAddTop\">添加顶级节点</el-button>\n        <el-tree ref=\"expandMenuList\" class=\"expand-tree\"\n        v-if=\"isLoadingTree\"\n        :data=\"setTree\"\n        node-key=\"id\"\n        highlight-current\n        :props=\"defaultProps\"\n        :expand-on-click-node=\"false\"\n        :render-content=\"renderContent\"\n        :default-expanded-keys=\"defaultExpandKeys\"\n        @node-click=\"handleNodeClick\"></el-tree>\n      </div>\n  </div>\n</template>\n<!-- VUE饿了么树形控件添加增删改功能按钮 -->\n<script>\nimport TreeRender from './tree_render'\nimport api from '@/resource/api'\n\n  export default{\n    name: 'tree',\n    data(){\n      return{\n        maxexpandId: api.maxexpandId,//新增节点开始id\n        non_maxexpandId: api.maxexpandId,//新增节点开始id(不更改)\n        isLoadingTree: false,//是否加载节点树\n        setTree: api.treelist,//节点树数据\n        defaultProps: {\n          children: 'children',\n          label: 'name'\n        },\n        defaultExpandKeys: [],//默认展开节点列表\n      }\n    },\n    mounted(){\n      console.log(api)\n      this.initExpand()\n    },\n    methods: {\n      initExpand(){\n        this.setTree.map((a) => {\n          this.defaultExpandKeys.push(a.id)\n        });\n        this.isLoadingTree = true;\n      },\n      handleNodeClick(d,n,s){//点击节点\n        // console.log(d,n)\n        d.isEdit = false;//放弃编辑状态\n      },\n      renderContent(h,{node,data,store}){//加载节点\n        let that = this;\n        return h(TreeRender,{\n          props: {\n            DATA: data,\n            NODE: node,\n            STORE: store,\n            maxexpandId: that.non_maxexpandId\n          },\n          on: {\n            nodeAdd: ((s,d,n) => that.handleAdd(s,d,n)),\n            nodeEdit: ((s,d,n) => that.handleEdit(s,d,n)),\n            nodeDel: ((s,d,n) => that.handleDelete(s,d,n))\n          }\n        });\n      },\n      handleAddTop(){\n        this.setTree.push({\n          id: ++this.maxexpandId,\n          name: '新增节点',\n          pid: '',\n          isEdit: false,\n          children: []\n        })\n      },\n      handleAdd(s,d,n){//增加节点\n        console.log(s,d,n)\n        if(n.level >=3){\n          this.$message.error(\"最多只支持五级！\")\n          return false;\n        }\n        //添加数据\n        d.children.push({\n          id: ++this.maxexpandId,\n          name: '新增节点',\n          pid: d.id,\n          isEdit: false,\n          children: []\n        });\n        //展开节点\n        if(!n.expanded){\n          n.expanded = true;\n        }\n      },\n      handleEdit(s,d,n){//编辑节点\n        console.log(s,d,n)\n      },\n      handleDelete(s,d,n){//删除节点\n        console.log(s,d,n)\n        let that = this;\n        //有子级不删除\n        if(d.children && d.children.length !== 0){\n          this.$message.error(\"此节点有子级，不可删除！\")\n          return false;\n        }else{\n          //新增节点直接删除，否则要询问是否删除\n          let delNode = () => {\n            let list = n.parent.data.children || n.parent.data,//节点同级数据\n              _index = 99999;//要删除的index\n            /*if(!n.parent.data.children){//删除顶级节点，无children\n              list = n.parent.data\n            }*/\n            list.map((c,i) => {\n              if(d.id == c.id){\n                _index = i;\n              }\n            })\n            let k = list.splice(_index,1);\n            //console.log(_index,k)\n            this.$message.success(\"删除成功！\")\n          }\n          let isDel = () => {\n            that.$confirm(\"是否删除此节点？\",\"提示\",{\n              confirmButtonText: \"确认\",\n              cancelButtonText: \"取消\",\n              type: \"warning\"\n            }).then(() => {\n              delNode()\n            }).catch(() => {\n              return false;\n            })\n          }\n          //判断是否新增\n          d.id > this.non_maxexpandId ? delNode() : isDel()\n          \n        }\n      },\n    }\n    \n  }\n</script>\n\n<style>\n.expand{\n  width:100%;\n  height:80%;\n  overflow:hidden;\n}\n.expand>div{\n  height:85%;\n  padding-top:20px;\n  width:50%;\n  margin:20px auto;\n  max-width:400px;\n  overflow-y:auto;\n}\n.expand>div::-webkit-scrollbar-track{\n  box-shadow: inset 0 0 6px rgba(0,0,0,.3);\n  border-radius:5px;\n}\n.expand>div::-webkit-scrollbar-thumb{\n  background-color:rgba(50, 65, 87, 0.5);\n  outline:1px solid slategrey;\n  border-radius:5px;\n}\n.expand>div::-webkit-scrollbar{\n  width:10px;\n}\n.expand-tree{\n  border:none;\n  margin-top:10px;\n}\n.expand-tree .el-tree-node.is-current,\n.expand-tree .el-tree-node:hover{\n  overflow:hidden;\n}\n.expand-tree .is-current>.el-tree-node__content .tree-btn,\n.expand-tree .el-tree-node__content:hover .tree-btn{\n  display:inline-block;\n}\n.expand-tree .is-current>.el-tree-node__content .tree-label{\n  font-weight:600;\n  white-space:normal;\n}\n</style>"],"sourceRoot":"src/pages/index/staff"}]}