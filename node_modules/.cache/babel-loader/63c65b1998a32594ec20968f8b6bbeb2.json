{"remainingRequest":"D:\\HBuilderProjects\\dmloa_pc\\node_modules\\babel-loader\\lib\\index.js!D:\\HBuilderProjects\\dmloa_pc\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\HBuilderProjects\\dmloa_pc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HBuilderProjects\\dmloa_pc\\src\\pages\\login\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HBuilderProjects\\dmloa_pc\\src\\pages\\login\\Login.vue","mtime":1618472039900},{"path":"D:\\HBuilderProjects\\dmloa_pc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615258085839},{"path":"D:\\HBuilderProjects\\dmloa_pc\\node_modules\\babel-loader\\lib\\index.js","mtime":1615258097485},{"path":"D:\\HBuilderProjects\\dmloa_pc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615258085839},{"path":"D:\\HBuilderProjects\\dmloa_pc\\node_modules\\vue-loader\\lib\\index.js","mtime":1615258095774}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    var checkPhone = function checkPhone(rule, value, callback) {\n      if (!value) {\n        return callback(new Error('手机号码不能为空'));\n      }\n\n      setTimeout(function () {\n        if (value.length < 11) {\n          callback(new Error('手机号码不正确'));\n        } else {\n          callback();\n        }\n      }, 1000);\n    };\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      activeName: 'first',\n      showLogin: true,\n      showRegister: false,\n      valiBtn: '获取验证码',\n      loginForm: {\n        adminaccount: '',\n        password: '',\n        adminphone: '',\n        smscode: ''\n      },\n      registerForm: {\n        companyname: '',\n        industry: '',\n        adminname: '',\n        adminphone: '',\n        adminaccount: '',\n        password: '',\n        smscode: ''\n      },\n      rules: {\n        adminaccount: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        adminphone: [{\n          required: true,\n          validator: checkPhone,\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        companyname: [{\n          required: true,\n          message: '请输入公司名称',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 18,\n          message: '长度在 6 到 18 个字符',\n          trigger: 'blur'\n        }],\n        industry: [{\n          message: '请选择行业类型',\n          trigger: 'change'\n        }],\n        adminname: [{\n          required: true,\n          message: '请输入管理员姓名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 5,\n          message: '长度在 3 到 5 个字符',\n          trigger: 'blur'\n        }],\n        smscode: [{\n          required: true,\n          message: '请输入短信验证码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    LoginPwd: function LoginPwd() {\n      var that = this;\n      var data = {\n        \"account\": this.loginForm.adminaccount,\n        \"password\": this.loginForm.password // 登录的Schema\n\n      };\n      this.axios.post('http://47.100.125.167:7080/auth/login', data).then(function (res) {\n        console.log(res.data);\n        console.log(res.config.data);\n\n        if (res.data.code == 0) {\n          var token = res.config.data; // 用户的token\n\n          console.log(token);\n          /**\n            存储在本地，类似于cookie，后期用于登录验证\n            token 会注册在axios的方法中，具体请看 main.js\n          */\n\n          localStorage.setItem('token', token); // 跳转登录后的页面， 或者弹出成功成功\n        } else {\n          that.message = res.data.message;\n          alert(that.message); // 用户名密码错误， 前端进行处理\n        }\n      });\n    },\n    //获取验证码\n    //获取验证码 并只验证手机号 是否正确\n    getCodeLogin: function getCodeLogin() {\n      var _this = this;\n\n      this.$refs['loginForm'].validateField('adminphone', function (err) {\n        if (err) {\n          console.log('未通过');\n          return;\n        } else {\n          console.log('已通过');\n\n          _this.tackBtn(); //验证码倒数60秒\n\n\n          var data = {\n            'phone': _this.loginForm.adminphone //POST 请求需要 转化为Form\n\n            /*this.axios.post('http://47.100.125.167:7080/auth/sms_code', data)\n            .then( res => {\n            console.log(res.data);\n            })*/\n\n          };\n        }\n      });\n    },\n    getCodeRegister: function getCodeRegister() {\n      var _this2 = this;\n\n      this.$refs['registerForm'].validateField('adminphone', function (err) {\n        if (err) {\n          console.log('未通过');\n          return;\n        } else {\n          console.log('已通过');\n\n          _this2.tackBtn(); //验证码倒数60秒\n\n\n          var data = {\n            'phone': _this2.registerForm.adminphone //POST 请求需要 转化为Form\n\n            /*this.axios.post('http://47.100.125.167:7080/auth/sms_code', data)\n            .then( res => {\n            console.log(res.data);\n            })*/\n\n          };\n        }\n      });\n    },\n    tackBtn: function tackBtn() {\n      var _this3 = this;\n\n      //验证码倒数60秒\n      var time = 60;\n      var timer = setInterval(function () {\n        if (time == 0) {\n          clearInterval(timer);\n          _this3.valiBtn = '获取验证码';\n          _this3.disabled = false;\n        } else {\n          _this3.disabled = true;\n          _this3.valiBtn = time + '秒后重试';\n          time--;\n        }\n      }, 1000);\n    },\n    LoginSms: function LoginSms() {\n      var that = this;\n      var data = {\n        \"phone\": this.loginForm.adminphone //\"password\": this.loginForm.password\n        // 登录的Schema\n\n      };\n      this.axios.post('http://47.100.125.167:7080/auth/login', data).then(function (res) {\n        console.log(res);\n\n        if (res.data.code == 0) {\n          var token = res.data.data.token; // 用户的token\n\n          /**\n            存储在本地，类似于cookie，后期用于登录验证\n            token 会注册在axios的方法中，具体请看 main.js\n          */\n\n          localStorage.setItem('token', token); // 跳转登录后的页面， 或者弹出成功成功\n        } else {\n          that.message = res.data.message;\n          alert(that.message); // 用户名密码错误， 前端进行处理\n        }\n      });\n    },\n    Register: function Register() {\n      var _this4 = this;\n\n      var that = this;\n      var data = {\n        company_name: this.registerForm.companyname,\n        industry: this.registerForm.industry,\n        name: this.registerForm.adminname,\n        //phone:this.registerForm.adminphone,\n        account: this.registerForm.adminaccount,\n        password: this.registerForm.password\n      };\n      this.$refs['registerForm'].validate(function (valid) {\n        if (valid) {\n          _this4.axios.post('http://47.100.125.167:7080/auth/register', data).then(function (res) {\n            console.log(res);\n\n            if (res.data.code == 0) {\n              alert('恭喜您，成功开通！');\n              var token = res.config.data;\n              localStorage.setItem('token', token);\n            } else {\n              that.message = res.data.message;\n              alert(that.message);\n            }\n          });\n\n          setTimeout(function () {\n            _this4.showRegister = false;\n            _this4.showLogin = true;\n          }, 3000);\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n\n    /*onLogin() {\n    \tlet {adminaccount,password} = this.loginForm;\n    \tif (adminaccount == 'admin' && password == 'admin') {\n    \t\tsessionStorage.setItem('username', adminaccount);\n    \t\tthis.$router.push('/index')\n    \t} else {\n    \t\talert('用户名和密码不匹配')\n    \t}\n    },*/\n    ToRegister: function ToRegister() {\n      this.showRegister = true;\n      this.showLogin = false;\n    },\n    ToLogin: function ToLogin() {\n      this.showRegister = false;\n      this.showLogin = true;\n    },\n    handleClick: function handleClick(tab, event) {\n      console.log(tab, event);\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\t<div id=\"login\">\r\n\t\t<h1>段马乐OA管理后台</h1>\r\n\t\t<div class=\"login-layout\" v-show=\"showLogin\">\r\n\t\t\t<el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\r\n\t\t\t\t<el-tab-pane label=\"密码登录\" name=\"first\">\r\n\t\t\t\t\t<el-form :model=\"loginForm\" status-icon ref=\"loginForm\" label-width=\"100px\"\r\n\t\t\t\t\t\tclass=\"demo-ruleForm\" :rules=\"rules\">\r\n\t\t\t\t\t\t<el-form-item label=\"管理员账户\" prop=\"adminaccount\">\r\n\t\t\t\t\t\t\t<el-input v-model=\"loginForm.adminaccount\"></el-input>\r\n\t\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t\t<el-form-item label=\"密码\" prop=\"password\">\r\n\t\t\t\t\t\t\t<el-input type=\"password\" v-model=\"loginForm.password\"></el-input>\r\n\t\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t\t<el-form-item>\r\n\t\t\t\t\t\t\t<el-button type=\"primary\" @click=\"LoginPwd\">登录</el-button>\r\n\t\t\t\t\t\t\t<el-button type=\"primary\" @click=\"ToRegister\">注册</el-button>\r\n\t\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t</el-form>\r\n\t\t\t\t</el-tab-pane>\r\n\t\t\t\t<el-tab-pane label=\"短信登录\" name=\"second\">\r\n\t\t\t\t\t<el-form :model=\"loginForm\" status-icon ref=\"loginForm\" label-width=\"100px\"\r\n\t\t\t\t\t\tclass=\"demo-ruleForm\" :rules=\"rules\">\r\n\t\t\t\t\t\t<el-form-item label=\"管理员手机\" prop=\"adminphone\">\r\n\t\t\t\t\t\t\t<el-input v-model=\"loginForm.adminphone\"></el-input>\r\n\t\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t\t<el-form-item label=\"短信验证码\" prop=\"smscode\" class=\"verification\">\r\n\t\t\t\t\t\t\t<el-input v-model=\"loginForm.smscode\"></el-input>\r\n\t\t\t\t\t\t\t<el-button @click=\"getCodeLogin\">{{valiBtn}}</el-button>\r\n\t\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t\t<el-form-item>\r\n\t\t\t\t\t\t\t<el-button type=\"primary\" @click=\"LoginSms\">登录</el-button>\r\n\t\t\t\t\t\t\t<el-button type=\"primary\" @click=\"ToRegister\">注册</el-button>\r\n\t\t\t\t\t\t</el-form-item>\r\n\t\t\t\t\t</el-form>\r\n\t\t\t\t</el-tab-pane>\r\n\t\t\t</el-tabs>\r\n\t\t</div>\r\n\t\t<div class=\"register-layout\" v-show=\"showRegister\">\r\n\t\t\t<el-form :model=\"registerForm\" :rules=\"rules\" ref=\"registerForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n\t\t\t\t<el-form-item label=\"企业名称\" prop=\"companyname\">\r\n\t\t\t\t\t<el-input v-model=\"registerForm.companyname\"></el-input>\r\n\t\t\t\t</el-form-item>\r\n\t\t\t\t<el-form-item label=\"行业类型\" prop=\"industry\">\r\n\t\t\t\t\t<el-select v-model=\"registerForm.industry\" placeholder=\"请选择行业类型\">\r\n\t\t\t\t\t\t<el-option label=\"类型一\" value=\"one\"></el-option>\r\n\t\t\t\t\t\t<el-option label=\"类型二\" value=\"two\"></el-option>\r\n\t\t\t\t\t</el-select>\r\n\t\t\t\t</el-form-item>\r\n\t\t\t\t<!--<el-form-item label=\"管理员姓名\" prop=\"adminname\">\r\n\t\t\t\t\t<el-input v-model=\"registerForm.adminname\"></el-input>\r\n\t\t\t\t</el-form-item>-->\r\n\t\t\t\t<el-form-item label=\"管理员账户\" prop=\"adminaccount\">\r\n\t\t\t\t\t<el-input v-model=\"registerForm.adminaccount\"></el-input>\r\n\t\t\t\t</el-form-item>\r\n\t\t\t\t<el-form-item label=\"登录密码\" prop=\"password\">\r\n\t\t\t\t\t<el-input type=\"password\" v-model=\"registerForm.password\"></el-input>\r\n\t\t\t\t</el-form-item>\r\n\t\t\t\t\r\n\t\t\t\t<el-form-item label=\"管理员手机\" prop=\"adminphone\">\r\n\t\t\t\t\t<el-input v-model=\"registerForm.adminphone\"></el-input>\r\n\t\t\t\t</el-form-item>\r\n\t\t\t\t<el-form-item label=\"短信验证码\" prop=\"smscode\" class=\"verification\">\r\n\t\t\t\t\t<el-input v-model=\"registerForm.smscode\"></el-input>\r\n\t\t\t\t\t<el-button @click=\"getCodeRegister\">{{valiBtn}}</el-button>\r\n\t\t\t\t</el-form-item>\r\n\t\t\t\t\r\n\t\t\t\t<el-form-item>\r\n\t\t\t\t\t<el-button type=\"primary\" @click=\"Register\">注册</el-button>\r\n\t\t\t\t\t<el-button type=\"text\" @click=\"ToLogin\">返回登录</el-button>\r\n\t\t\t\t</el-form-item>\r\n\t\t\t</el-form>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport axios from 'axios'\r\n\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\tvar checkPhone = (rule, value, callback) => {\r\n\t\t\t\tif (!value) {\r\n\t\t\t\t\treturn callback(new Error('手机号码不能为空'));\r\n\t\t\t\t}\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tif (value.length < 11) {\r\n\t\t\t\t\t\tcallback(new Error('手机号码不正确'));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 1000);\r\n\t\t\t};\r\n\t\t\tvar validatePass = (rule, value, callback) => {\r\n\t\t\t\tif (value === '') {\r\n\t\t\t\t\tcallback(new Error('请输入密码'));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\treturn {\r\n\t\t\t\tactiveName: 'first',\r\n\t\t\t\tshowLogin: true,\r\n\t\t\t\tshowRegister: false,\r\n\t\t\t\tvaliBtn:'获取验证码',\r\n\t\t\t\tloginForm: {\r\n\t\t\t\t\tadminaccount: '',\r\n\t\t\t\t\tpassword: '',\r\n\t\t\t\t\tadminphone: '',\r\n\t\t\t\t\tsmscode: ''\r\n\t\t\t\t},\r\n\t\t\t\tregisterForm: {\r\n\t\t\t\t\tcompanyname: '',\r\n\t\t\t\t\tindustry: '',\r\n\t\t\t\t\tadminname: '',\r\n\t\t\t\t\tadminphone: '',\r\n\t\t\t\t\tadminaccount: '',\r\n\t\t\t\t\tpassword:'',\r\n\t\t\t\t\tsmscode: '',\r\n\t\t\t\t},\r\n\t\t\t\trules: {\r\n\t\t\t\t\tadminaccount: [\r\n\t\t\t\t\t\t{required: true,message: '请输入用户名',trigger: 'blur'}\r\n\t\t\t\t\t],\r\n\t\t\t\t\tadminphone: [\r\n\t\t\t\t\t\t{required: true,validator: checkPhone,trigger: 'blur'},\r\n\t\t\t\t\t],\r\n\t\t\t\t\tpassword: [\r\n\t\t\t\t\t\t{required: true,validator: validatePass,trigger: 'blur'},\r\n\t\t\t\t\t],\r\n\t\t\t\t\tcompanyname: [\r\n\t\t\t\t\t\t{required: true,message: '请输入公司名称',trigger: 'blur'},\r\n\t\t\t\t\t\t{min: 6,max: 18,message: '长度在 6 到 18 个字符',trigger: 'blur'}\r\n\t\t\t\t\t],\r\n\t\t\t\t\tindustry: [{message: '请选择行业类型',trigger: 'change'}],\r\n\t\t\t\t\tadminname: [\r\n\t\t\t\t\t\t{required: true,message: '请输入管理员姓名',trigger: 'blur'},\r\n\t\t\t\t\t\t{min: 3,max: 5,message: '长度在 3 到 5 个字符',trigger: 'blur'}\r\n\t\t\t\t\t],\r\n\t\t\t\t\tsmscode: [\r\n\t\t\t\t\t\t{required: true,message: '请输入短信验证码',trigger: 'blur'},\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tLoginPwd: function() {\r\n\t\t\t\tlet that = this;\r\n\t\t\t\tlet data = {\r\n\t\t\t\t\t\"account\": this.loginForm.adminaccount,\r\n\t\t\t\t\t\"password\": this.loginForm.password\r\n\t\t\t\t} // 登录的Schema\r\n\t\t\t\tthis.axios.post('http://47.100.125.167:7080/auth/login', data)\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tconsole.log(res.data)\r\n\t\t\t\t\tconsole.log(res.config.data)\r\n\t\t\t\t\tif (res.data.code == 0) {\r\n\t\t\t\t\t\tlet token = res.config.data; // 用户的token\r\n\t\t\t\t\t\tconsole.log(token)\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t  存储在本地，类似于cookie，后期用于登录验证\r\n\t\t\t\t\t\t  token 会注册在axios的方法中，具体请看 main.js\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t\tlocalStorage.setItem('token', token);\r\n\t\t\t\t\t\t// 跳转登录后的页面， 或者弹出成功成功\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthat.message = res.data.message\r\n\t\t\t\t\t\talert(that.message)\r\n\t\t\t\t\t\t// 用户名密码错误， 前端进行处理\r\n\t\t\t\t\t}\r\n\t\t\t\t})\t\r\n\t\t\t},\r\n\t\t\t//获取验证码\r\n\t\t\t//获取验证码 并只验证手机号 是否正确\r\n\t\t\tgetCodeLogin(){\r\n\t\t\t   this.$refs['loginForm'].validateField('adminphone', (err) =>{\r\n\t\t\t        if(err){\r\n\t\t\t            console.log('未通过')\r\n\t\t\t            return;\r\n\t\t\t        }else{\r\n\t\t\t            console.log('已通过')\r\n\t\t\t            this.tackBtn();   //验证码倒数60秒\r\n\t\t\t            let data = {'phone':this.loginForm.adminphone}  //POST 请求需要 转化为Form\r\n\t\t\t            /*this.axios.post('http://47.100.125.167:7080/auth/sms_code', data)\r\n\t\t\t\t\t\t.then( res => {\r\n\t\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t            })*/\r\n\t\t\t        }\r\n\t\t\t    })\r\n\t\t\t},\r\n\t\t\tgetCodeRegister(){\r\n\t\t\t   this.$refs['registerForm'].validateField('adminphone', (err) =>{\r\n\t\t\t        if(err){\r\n\t\t\t            console.log('未通过')\r\n\t\t\t            return;\r\n\t\t\t        }else{\r\n\t\t\t            console.log('已通过')\r\n\t\t\t            this.tackBtn();   //验证码倒数60秒\r\n\t\t\t            let data = {'phone':this.registerForm.adminphone}  //POST 请求需要 转化为Form\r\n\t\t\t            /*this.axios.post('http://47.100.125.167:7080/auth/sms_code', data)\r\n\t\t\t\t\t\t.then( res => {\r\n\t\t\t\t\t\t\tconsole.log(res.data);\r\n\t\t\t            })*/\r\n\t\t\t        }\r\n\t\t\t    })\r\n\t\t\t},\r\n\t\t\ttackBtn(){       //验证码倒数60秒\r\n\t\t\t\tlet time = 60;\r\n\t\t\t\tlet timer = setInterval(() => {\r\n\t\t\t\t\tif(time == 0){\r\n\t\t\t\t\t\tclearInterval(timer);\r\n\t\t\t\t\t\tthis.valiBtn = '获取验证码';\r\n\t\t\t\t\t\tthis.disabled = false;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis.disabled = true;\r\n\t\t\t\t\t\tthis.valiBtn = time + '秒后重试';\r\n\t\t\t\t\t\ttime--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 1000);\r\n\t\t\t},\r\n\t\t\tLoginSms: function() {\r\n\t\t\t\tlet that = this;\r\n\t\t\t\tlet data = {\r\n\t\t\t\t\t\"phone\": this.loginForm.adminphone,\r\n\t\t\t\t\t//\"password\": this.loginForm.password\r\n\t\t\t\t} // 登录的Schema\r\n\t\t\t\tthis.axios.post('http://47.100.125.167:7080/auth/login', data)\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\tconsole.log(res)\r\n\t\t\t\t\tif (res.data.code == 0) {\r\n\t\t\t\t\t\tlet token = res.data.data.token; // 用户的token\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t  存储在本地，类似于cookie，后期用于登录验证\r\n\t\t\t\t\t\t  token 会注册在axios的方法中，具体请看 main.js\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t\tlocalStorage.setItem('token', token);\r\n\t\t\t\t\t\t// 跳转登录后的页面， 或者弹出成功成功\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthat.message = res.data.message\r\n\t\t\t\t\t\talert(that.message)\r\n\t\t\t\t\t\t// 用户名密码错误， 前端进行处理\r\n\t\t\t\t\t}\r\n\t\t\t\t})\t\r\n\t\t\t},\r\n\t\t\tRegister: function() {\r\n\t\t\t\tlet that = this;\r\n\t\t\t\tlet data={\r\n\t\t\t\t\tcompany_name:this.registerForm.companyname,\r\n\t\t\t\t\tindustry:this.registerForm.industry,\r\n\t\t\t\t\tname:this.registerForm.adminname,\r\n\t\t\t\t\t//phone:this.registerForm.adminphone,\r\n\t\t\t\t\taccount:this.registerForm.adminaccount,\r\n\t\t\t\t\tpassword:this.registerForm.password\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.$refs['registerForm'].validate((valid) => {\r\n\t\t\t\t    if (valid) {\r\n\t\t\t\t\t\tthis.axios.post('http://47.100.125.167:7080/auth/register', data)\r\n\t\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\t\tconsole.log(res)\r\n\t\t\t\t\t\t\tif (res.data.code == 0) {\r\n\t\t\t\t\t\t\t\talert('恭喜您，成功开通！');\r\n\t\t\t\t\t\t\t\tlet token = res.config.data;\r\n\t\t\t\t\t\t\t\tlocalStorage.setItem('token', token);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthat.message = res.data.message\r\n\t\t\t\t\t\t\t\talert(that.message)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tthis.showRegister = false\r\n\t\t\t\t\t\t\tthis.showLogin = true\r\n\t\t\t\t\t\t}, 3000);\r\n\t\t\t\t    } else {\r\n\t\t\t\t\t\tconsole.log('error submit!!');\r\n\t\t\t\t        return false;\r\n\t\t\t\t    }\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t/*onLogin() {\r\n\t\t\t\tlet {adminaccount,password} = this.loginForm;\r\n\t\t\t\tif (adminaccount == 'admin' && password == 'admin') {\r\n\t\t\t\t\tsessionStorage.setItem('username', adminaccount);\r\n\t\t\t\t\tthis.$router.push('/index')\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert('用户名和密码不匹配')\r\n\t\t\t\t}\r\n\t\t\t},*/\r\n\t\t\t\r\n\t\t\tToRegister() {\r\n\t\t\t\tthis.showRegister = true\r\n\t\t\t\tthis.showLogin = false\r\n\t\t\t},\r\n\t\t\tToLogin() {\r\n\t\t\t\tthis.showRegister = false\r\n\t\t\t\tthis.showLogin = true\r\n\t\t\t},\r\n\t\t\thandleClick(tab, event) {\r\n\t\t\t\tconsole.log(tab, event);\r\n\t\t\t},\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\tbody {\r\n\t\tbackground-color: #004343;\r\n\t}\r\n\t.verification .el-input{\r\n\t\twidth:138px;\r\n\t\tmargin-right: 10px;\r\n\t}\r\n\t.verification .el-button{\r\n\t}\r\n</style>\n"],"sourceRoot":"src/pages/login"}]}